swirl()
library("swirl")
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
getwd() <- old.dir
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path('folder1','folder2')
play()
file.list()
list.files()
?file.path
nxt()
?dir.create
dir.create("~/testdir2/testdir3",showWarnings=TRUE,recursive=TRUE,mode="0777")
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
setwd() <- old.dir
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
play()
?along.with
??along.with
?along
nxt()
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2) times=10)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- vector(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name<-c(my_char,"Lindsey")
my_name
paste(my_name)
paste(my_name, collapse(" "))
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(1:3,c("X", "Y", "Z"), sep ="")
paste(LETTERS,1:4, sep=-'')
paste(LETTERS,1:4, sep='-')
getwd()
setwd("/Users/lindseyhandley/R_Programming_Coursera/")
getwd()
?cor
source("corr.R")
source("complete.R")
corr("specdata",150)
?cor
corr("specdata",150)
corr("specdata",1)
source("corr.R")
corr("specdata",1)
my_table <- corr("specdata",1)
class(my_table)
colnames(my_table)
source("corr.R")
my_table <- corr("specdata",1)
colnames(my_table)
?read.table
source("corr.R")
my_table <- corr("specdata",1)
colnames(my_table)
my_table
source("corr.R")
correlation <- corr("specdata",1)
correlation
?cor
source("corr.R")
source("complete.R")
cr <- corr("specdata",150)
head(cr)
cr
summary(cr)
?head
?cor
?head
cr <- corr("specdata",150)
source("corr.R")
cr <- corr("specdata",150)
cr
source("corr.R")
cr <- corr("specdata",150)
?cor
?matrix
source("corr.R")
cr <- corr("specdata",150)
source("corr.R")
source("corr.R")
cr <- corr("specdata",150)
source("corr.R")
cr <- corr("specdata",150)
?cor
source("corr.R")
cr <- corr("specdata",150)
cr <- corr("specdata",150)
source("corr.R")
cr <- corr("specdata",150)
source("corr.R")
cr <- corr("specdata",150)
?matrix
source("corr.R")
cr <- corr("specdata",150)
source("corr.R")
cr <- corr("specdata",150)
cr
?cor
?vector
source("corr.R")
cr <- corr("specdata",150)
source("corr.R")
cr <- corr("specdata",150)
source("corr.R")
cr <- corr("specdata",150)
cr <- corr("specdata",150)
source("corr.R")
cr <- corr("specdata",150)
cr
source("corr.R")
cr <- corr("specdata",150)
append?
append?
?append
source("corr.R")
cr <- corr("specdata",150)
source("corr.R")
cr <- corr("specdata",150)
cr
source("corr.R")
cr <- corr("specdata",150)
source("corr.R")
cr <- corr("specdata",150)
cr
source("corr.R")
cr <- corr("specdata",150)
cr
?cor
source("corr.R")
cr <- corr("specdata",150)
source("corr.R")
cr <- corr("specdata",150)
cr
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata",150)
cr
head(cr)
summary(cr)
cr <- corr("specdata",400)
head(cr)
summary(cr)
cr <- corr("specdata",5000)
summary(cr)
source("corr.R")
cr <- corr("specdata",5000)
source("corr.R")
cr <- corr("specdata",5000)
cr
cr <- corr("specdata",400)
head(cr)
summary(cr)
cr <- corr("specdata")
head(cr)
summary(cr)
length(cr)
?head
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
source("complete.R\")
source("complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
source("complete.R")
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
source("corr.R")
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
library(swril)
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors, sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_Mat)
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
swirl()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
swirl()
?rnorm
x <- list(a=1:5, b=rnom(10))
lapply(x,mean)
x <- list(a=1:5, b=rnom(10))
lapply(x,mean)
x <- list(a=1:5, b=rnorm(10))
lapply(x,mean)
x <- list(a=1:5, b=rnorm(10))
lapply(x,mean)
x <- list(a=1:5, b=rnorm(10))
lapply(x,mean)
x <- list(a=1:4, b=rnorm(10), c=rnorm(20,1), d=rnorm(100,5))
lapply(x,mean)
?runif
x <-1:4
lapply(x, runif) ##
lapply(x, runif, min=0, max=10)
x <- list(a = matrix(1:4,2,2), b = matrix(1:6,3,2))
x
lapply(x,function(elt) elt[,1])
sapply(x, mean)
x <- list(a=1:4, b=rnorm(10), c=rnorm(20,1), d=rnorm(100,5))
lapply(x,mean)
sapply(x,mean)
?str
str(apply)
x <- matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x, 1, mean)
x <- matrix(rnorm(200),20,10)
apply(x,1,quantile, probs=c(0.25,0.75))
a <- array(rnorm(2*2*10),c(2,2,10))
apply(a, c(1,2),mean)
rowMeans(a,dims=2)
> str(mapply)
str(mapply)
list(rep(1,4),rep(2,3),rep(3,2),rep(4,1))
mapply(rep, 1:4, 4:1)
rep(1:4)
rep(4:1)
rep(1:4,4:1)
noise <- function(n,mean,sd){}
noise <- function(n,mean,sd){}
noise <- function(n,mean,sd){
rnorm(n,mean,sd)
}
noise(5,1,2)
noise(1:5,1:5,2)
mapply(noise, 1:5, 1:5,2)
str(tapply)
?fl
?gl
?rnorm
x <- x(rnorm(10),runif(10), rnorm(10,1))
x <- x(rnorm(10),runif(10), rnorm(10,1))
x <- c(rnorm(10),runif(10), rnorm(10,1))
f <- gl(3,10) ##generates factor levels, 1-3, each w/ 10 reps
f
tapply(x,f,mean)
class(tapply(x,f,mean))
tapply(x,f,mean, SIMPLIFY=FALSE)
tapply(x,f,mean, simplify=FALSE)
tapply(x,f,range)
str(split)
x <- c(rnorm(10),runif(10), rnorm(10,1))
f <- gl(3,10) ##generates factor levels, 1-3, each w/ 10 reps
split(x,f)
lapply(split(x,f),mean)
x <- rnorm(10)
f1 <- gl(2,5)
f2 <- gl(5,2)
f1
f2
interaction(f1,f2)
str(split(x,list(f1,f2)))
split(x,list(f1,f2))
str(split(x,list(f1,f2),drop=TRUE))
printmessage <- function(x) {
if(x<0){
print("x is greater than 0")
}
else
print("x is less than or equal to zero")
invisible(x) ## Won't do auto-printing! Returns invisibly! Object returned by function doesn't get printed to the console
}
printmessage(1)
printmessage(NA)
printmessage <- function(x) {
if(is.na(x)){
print("x is a missing value!")
}
else if(x > 0){
print("x is greater than 0")
}
else
print("x is less than or equal to zero")
invisible(x) ## Won't do auto-printing! Returns invisibly! Object returned by function doesn't get printed to the console
}
x.log(-1)
x <- log(-1)
printmessage(x)
library(datasets)
data(iris)
?iris
iris
split(iris,iris$Species)
s< -split(iris,iris$Species)
s <- split(iris,iris$Species)
s
colMeans(s$virginica)
lapply(s$virginica, function(x) colMeans(x))
lapply(s, function(x) colMeans(x))
sapply(s, function(x) colMeans(x))
sapply(s$virginica, function(x) colMeans(x))
class(s$virginica)
lapply(s, function(x) colMeans(x[,"Sepal.Length"]))
lapply(s, function(x) colMeans(x[,c("Sepal.Length")]))
lapply(s, function(x) colMeans(x[,c("Sepal.Length","Sepal.Width")]))
lapply(s$virginica, function(x) colMeans(x[,c("Sepal.Length","Sepal.Width")]))
lapply(s, function(x) colMeans(x[,c("Sepal.Length","Sepal.Width")]))
iris
apply(iris[, 1:4], 2, mean)
class(apply(iris[, 1:4], 2, mean))
data(mtcars)
?mtcars
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
?with
apply(mtcars, 2, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429 - 82.63636
debug(ls)
ls
ls
?debug
ls
